//---------------------------------------------------------------------------

#include <fmx.h>
#include <fstream>
#include <string>
#include <vector>
#include <sstream>
#pragma hdrstop

using namespace std;

#include "LoginForm.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.fmx"
TMyLoginForm *MyLoginForm;
//---------------------------------------------------------------------------
__fastcall TMyLoginForm::TMyLoginForm(TComponent* Owner)
	: TForm(Owner)
{
    messageLabel->Text = "";
}
//---------------------------------------------------------------------------

vector<string> parseCommaDelimitedString(string line)
{
	vector<string> result;
	stringstream s_stream(line);

	while(s_stream.good())
	{
		string str;
		getline(s_stream, str, ',');
		result.push_back(str);
	}

	return result;
}

void __fastcall TMyLoginForm::loginButtonClick(TObject *Sender)
{
	fstream myFile;
	myFile.open("registeredUsers.txt", ios::in);

	if(myFile.is_open())
	{
		string line;

		while(getline(myFile, line))
		{
			vector<string> parsedLine = parseCommaDelimitedString(line);
			const char* username = parsedLine.at(2).c_str(); // Converting to constant string b/c parsed line is not constant

			AnsiString editUsername = usernameEdit->Text;
			const char* usernameString = editUsername.c_str();

			if( strcmp(username, usernameString) == 0 )
			{
				const char* password = parsedLine.at(3).c_str();

				AnsiString editPassword = passwordEdit->Text;
				const char* passwordString = editPassword.c_str();

				if ( strcmp(password, passwordString) == 0 )
				{
					messageLabel->Text = "Success!";
				}
				else
				{
					messageLabel->Text = "Wrong Password!";
				}
			}
			else
			{
				messageLabel->Text = "Username Doesn't Exist!";
			}
		}
	}
}
//---------------------------------------------------------------------------
